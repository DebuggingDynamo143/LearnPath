import express from "express";
import dotenv from "dotenv";
import cors from "cors";
import path from "path";
import { fileURLToPath } from "url";
import { GoogleGenerativeAI } from "@google/generative-ai";

dotenv.config();

const app = express();
const PORT = process.env.PORT || 3001;

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

app.use(cors());
app.use(express.json());
app.use(express.static(path.join(__dirname, "public")));

let genAI = null;
let model = null;

try {
  if (process.env.GEMINI_API_KEY) {
    genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
    // ✅ CORRECT: "gemini-pro" with hyphen
    model = genAI.getGenerativeModel({ model: "gemini-pro" });
    console.log("✅ Gemini AI model initialized.");
  } else {
    console.warn("⚠️ No GEMINI_API_KEY found, running in demo mode.");
  }
} catch (err) {
  console.error("❌ Error initializing Gemini AI:", err.message);
}

app.get("/api/health", (req, res) => {
  res.json({ status: "ok", hasApiKey: !!process.env.GEMINI_API_KEY });
});

app.post("/api/generate-path", async (req, res) => {
  const { skills } = req.body;
  if (!skills) {
    return res.status(400).json({ success: false, error: "Skills are required" });
  }

  try {
    if (!model) {
      // Demo mode with clickable links
      return res.json({
        success: true,
        mode: "mock",
        data: [
          {
            title: "Mathematics for Data Science",
            duration: "8 weeks",
            description:
              "Covers essential mathematical concepts like linear algebra, calculus, probability, and statistics crucial for understanding and applying data science techniques.",
            resources: [
              { name: "Khan Academy Linear Algebra", url: "https://www.khanacademy.org/math/linear-algebra" },
              { name: "MIT OpenCourseWare Calculus", url: "https://ocw.mit.edu/courses/mathematics/18-01sc-single-variable-calculus-fall-2010/" },
              { name: "3Blue1Brown Essence of Linear Algebra", url: "https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab" },
              { name: "Statistics with R by Peng", url: "https://www.coursera.org/learn/statistics" }
            ]
          }
        ]
      });
    }

    // AI mode
    const prompt = `Generate a structured learning path for: ${skills}.
Return JSON array of modules with fields:
- title
- duration
- description
- resources: array of { name, url }`;

    const result = await model.generateContent(prompt);
    let output = result.response.text();
    output = output.replace(/```json|```/g, "").trim();

    let parsed;
    try {
      parsed = JSON.parse(output);
    } catch {
      console.warn("⚠️ AI returned invalid JSON, using fallback.");
      parsed = [
        {
          title: "Learn " + skills,
          duration: "4 weeks",
          description: "Structured learning path generated by AI.",
          resources: [
            { name: "Google Search", url: `https://www.google.com/search?q=${encodeURIComponent(skills)}` }
          ]
        }
      ];
    }

    res.json({ success: true, mode: "ai", data: parsed });
  } catch (err) {
    console.error("❌ Error generating path:", err);
    res.status(500).json({ success: false, error: err.message });
  }
});

app.get(/.*/, (req, res) => {
  res.sendFile(path.join(__dirname, "public", "index.html"));
});

app.listen(PORT, () => {
  console.log(`🚀 Server running on http://localhost:${PORT}`);
});
